# This is a basic workflow to help you get started with Actions

name: Monitor Site Status v1

# Controls when the workflow will run
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '*/5 * * * *'

  # Triggers the workflow on push or pull request events but only for the master branch
#   push:
#     branches: [ dev ]
#   pull_request:
#     branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  msite_job_1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /opt
        shell: bash
        
    container:
      image: harry97/mcloud-toolkit:latest
      env:
        SLACK_CLI_TOKEN: ${{ secrets.DEFAULT_SLACK_TOKEN }}
        MT_0001_SLACK_CLI_TOKEN: ${{ secrets.DEFAULT_SLACK_TOKEN }}
        SENDGRID_API_KEY: ${{ secrets.DEFAULT_SENDGRID_TOKEN }}
        GOOGLE_SHEET: ${{ secrets.MWEB24X7_GOOGLE_SHEET }}
        EMAIL_FROM: mcloudautomation@gmail.com
        EMAIL_MODE: SENDGRID
        REPLY_EMAIL_ADDRESS: 'Harry <HarryTheDevOpsGuy@gmail.com>'
        EMAIL_NOTIFICATION: 'true'
        SLACK_ALERT_REPEAT_INTERVAL: '120'
        EMAIL_ALERT_REPEAT_INTERVAL: '180'
        #LOOP_REPEAT_INTERVAL: '10'
        OUTPUT_LOG_DIR: '/tmp/logdata'
        LOG_BRANCH: mweb24x7
        

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
          
      - name: Clone logdata to repo
        run: |
          REMOTE=https://${{ secrets.GH_PERSONAL_TOKEN }}@github.com/HarryTheDevOpsGuy/logdata.git
          git clone ${REMOTE} ${OUTPUT_LOG_DIR}
          cd ${OUTPUT_LOG_DIR}
          git checkout ${LOG_BRANCH} || git checkout -b ${LOG_BRANCH}
      - uses: actions/checkout@v2
        with:
          repository: HarryTheDevOpsGuy/mConfigs
          token: ${{ secrets.GH_PERSONAL_TOKEN }}

      # Check Website Status
      - name: Check Website Status
        run: |
          chmod +x /usr/bin/mweb24x7
          mweb24x7 -g "${GOOGLE_SHEET}" -m 30 -v 

          
      - name: Push changes to repo
        run: |
          cd ${OUTPUT_LOG_DIR}
          REMOTE=https://${{ secrets.GH_PERSONAL_TOKEN }}@github.com/HarryTheDevOpsGuy/logdata.git
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"
          git pull ${REMOTE}
          git checkout ${LOG_BRANCH}
          git pull origin ${LOG_BRANCH}
          git add .
          git status
          FCOUNT="$(git diff --name-only --cached|wc -l)"
          if [[ ${FCOUNT} -gt 0 ]]; then
            git commit -am "update logdata for ${LOG_BRANCH}"
            git push ${REMOTE} ${LOG_BRANCH} 
          else 
            echo "NO Changed"
          fi
